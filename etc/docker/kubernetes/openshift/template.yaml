#########################################################################
#      Copyright (C) 2024        Sebastian Francisco Colomar Bauza      #
#      SPDX-License-Identifier:  GPL-2.0-only                           #
#########################################################################
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Docker xWiki
    openshift.io/display-name: Docker xWiki
    openshift.io/provider-display-name: Sebastian Colomar
    tags: xwiki
    version: latest
  name: docker-xwiki
message: xWiki is now deployed.
objects:
- apiVersion: v1
  data:
    args-1: --character-set-server=utf8mb4
    args-2: --collation-server=utf8mb4_bin
    args-3: --explicit-defaults-for-timestamp=1
    args-4: --datadir=/var/lib/mysql/data
  kind: ConfigMap
  metadata:
    name: ${NAME_DB}-args
- apiVersion: v1
  data:
    init.sql: grant all privileges on *.* to xwiki@'%'
  kind: ConfigMap
  metadata:
    name: ${NAME_DB}-init
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${NAME_DB}
  spec:
    selector:
      matchLabels:
        app: ${NAME_DB}
    template:
      metadata:
        labels:
          app: ${NAME_DB}
      spec:
        containers:
        - args:
          - $(MYSQL_ARG_1)
          - $(MYSQL_ARG_2)
          - $(MYSQL_ARG_3)
          - $(MYSQL_ARG_4)
          env:
          - name: MYSQL_ARG_1
            valueFrom:
              configMapKeyRef:
                key: args-1
                name: ${NAME_DB}-args
          - name: MYSQL_ARG_2
            valueFrom:
              configMapKeyRef:
                key: args-2
                name: ${NAME_DB}-args
          - name: MYSQL_ARG_3
            valueFrom:
              configMapKeyRef:
                key: args-3
                name: ${NAME_DB}-args
          - name: MYSQL_ARG_4
            valueFrom:
              configMapKeyRef:
                key: args-4
                name: ${NAME_DB}-args
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: MYSQL_DATABASE
                name: ${NAME_DB}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: ${NAME_DB}
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_ROOT_PASSWORD
                name: ${NAME_DB}
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_USER
                name: ${NAME_DB}
          image: ${IMAGE_DB}
          name: ${NAME_DB}
          ports:
          - containerPort: ${PORT_DB}
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: ${NAME_DB}
          - mountPath: /docker-entrypoint-initdb.d
            name: ${NAME_DB}-init
        volumes:
        - name: ${NAME_DB}
          persistentVolumeClaim:
            claimName: ${NAME_DB}
        - configMap:
            name: ${NAME_DB}-init
          name: ${NAME_DB}-init
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${NAME_APP}
  spec:
    selector:
      matchLabels:
        app: ${NAME_APP}
    template:
      metadata:
        labels:
          app: ${NAME_APP}
      spec:
        containers:
        - env:
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                key: DB_DATABASE
                name: ${NAME_APP}
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                key: DB_HOST
                name: ${NAME_APP}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: ${NAME_APP}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: ${NAME_APP}
          image: secobau/docker-xwiki:latest
          name: ${NAME_APP}
          ports:
          - containerPort: ${PORT_APP}
          volumeMounts:
          - mountPath: /usr/local/xwiki          
            name: ${NAME_APP}
        volumes:
        - name: ${NAME_APP}
          persistentVolumeClaim:
            claimName: ${NAME_APP}
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: ${NAME_DB}
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            app: ${NAME_APP}
      ports:
      - port: ${PORT_DB}
    podSelector:
      matchLabels:
        app: ${NAME_DB}
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: ${NAME_APP}
  spec:
    ingress:
    - ports:
      - port: ${PORT_APP}
    podSelector:
      matchLabels:
        app: ${NAME_APP}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME_DB}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PVC_SIZE_DB}
    storageClassName: ${storageClassName}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME_APP}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PVC_SIZE_APP}
    storageClassName: ${storageClassName}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${NAME_APP}
  spec:
    to:
      kind: Service
      name: ${NAME_APP}
    port:
      targetPort: ${PORT_APP}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
- apiVersion: v1
  stringData:
    MYSQL_DATABASE: ${NAME_APP}
    MYSQL_PASSWORD: ${DB_PASSWORD}
    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    MYSQL_USER: ${DB_USER}
  kind: Secret
  metadata:
    name: ${NAME_DB}
  type: Opaque
- apiVersion: v1
  stringData:
    DB_DATABASE: ${NAME_APP}
    DB_HOST: ${NAME_DB}
    DB_PASSWORD: ${DB_PASSWORD}
    DB_USER: ${DB_USER}
  kind: Secret
  metadata:
    name: ${NAME_APP}
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME_DB}
  spec:
    ports:
    - port: ${PORT_DB}
    selector:
      app: ${NAME_DB}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME_APP}
  spec:
    selector:
      app: ${NAME_APP}
    ports:
    - port: ${PORT_APP}
parameters:
- description: Name of the app deployment (app=xwiki)
  displayName: NAME_APP
  name: NAME_APP
  required: true
  value: xwiki
- description: Name of the db deployment (app=mysql)
  displayName: NAME_DB
  name: NAME_DB
  required: true
  value: mysql
- description: Image name for the db deployment
  displayName: IMAGE_DB
  name: IMAGE_DB
  required: true
  value: mysql:5.7
- description: Port of the app service
  displayName: PORT_APP
  name: PORT_APP
  required: true
  value: '8080'
- description: Port of the db service
  displayName: PORT_DB
  name: PORT_DB
  required: true
  value: '3306'
- description: DB user
  displayName: DB_USER
  name: DB_USER
  required: true
  value: mysql
- description: DB password
  displayName: DB_PASSWORD
  name: DB_PASSWORD
  required: true
  value: mysql
- description: DB root password
  displayName: MYSQL_ROOT_PASSWORD
  name: MYSQL_ROOT_PASSWORD
  required: true
  value: mysql
- description: Storage Class Namme
  displayName: storageClassName
  name: storageClassName
  required: true
  value: gp3-csi
- description: PV size for APP
  displayName: PVC_SIZE_APP
  name: PVC_SIZE_APP
  required: true
  value: 1g
- description: PV size for DB
  displayName: PVC_SIZE_DB
  name: PVC_SIZE_DB
  required: true
  value: 1g
